name: Cryptography using rust base image

on:
  push:
    branches:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  DOCKER_BUILDKIT: '1'
  TARGET_PLATFORMS: "linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x"
  PUSH: true


jobs:
  python:
    strategy:
      max-parallel: 1
      matrix:
#        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11-rc"]
        python-version: ["3.10"]
    continue-on-error: true
    runs-on: ubuntu-22.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Create builtkitd config override
        run: |
          echo "[worker.oci]" > /tmp/buildkitd.toml
          echo "  max-parallelism = 1" >> /tmp/buildkitd.toml
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
          config: /tmp/buildkitd.toml
      - name: Build python-cryptography using rust-python${{ matrix.python-version }}
        uses: docker/build-push-action@v3
        with:
          file: python/rust-python-cryptography.dockerfile
          platforms: ${{ env.TARGET_PLATFORMS }}
          push: false
          target: export-wheels
          tags: |
            rust-python${{ matrix.python-version }}-cryptography
          build-args: PYVER=${{ matrix.python-version }}
          outputs: type=local,dest=/tmp/cryptography-wheels
          ulimit: nofile=262144:262144
          # outputs: type=docker,dest=/tmp/python${{ matrix.python-version }}-cryptography.tar
      - name: List wheels directory
        run: |
          ls -R /tmp/cryptography-wheels
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: rust-python-${{ matrix.python-version }}-cryptography
          path: /tmp/cryptography-wheels
